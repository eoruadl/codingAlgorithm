'''
    # 문제
    0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 
    먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 
    그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 
    다음 예를 보자.
    26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.
    위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.
    N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.

    # 입력
    첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.

    # 출력
    첫째 줄에 N의 사이클 길이를 출력한다.
'''

# 내가 푼 풀이
n = int(input())

a = n//10  # 십의 자리수
b = n % 10  # 일의 자리수
c = a+b

cy = 0
while 1:
    new_n = 10*b + c % 10
    cy += 1
    if new_n == n:
        break
    a = new_n//10
    b = new_n % 10
    c = a+b
print(cy)

# 더 짧은 코드 / while문 안에 변수를 집어 넣을 수 있었음
n = int(input())
num = n
cnt = 0

while True:  # True는 1로 사용할 수 있다
    a = num // 10
    b = num % 10
    c = (a+b) % 10
    num = (b * 10) + c

    cnt += 1
    if num == n:
        break
print(cnt)

# str로 풀이
n = input()
'''
    n = 26 입력 가정
    input()으로 어떤 것을 받듣지(문자, 숫자 등등) str(문자열)로 입력된 후 list[]로 저장
    예) 26 입력 -> n = [2,6]
'''
num = n
cnt = 0  # 사이클 수

while 1:
    if len(num) == 1:  # 리스트 길이가 1인 경우, 즉, 한 자리수 입력 시
        num = '0' + num  # 문자열 '0'을 더 해준다
    plus = str(int(num[0]) + int(num[1]))  # num의 십의 자리수와 일의 자리수를 더해줌
    num = num[-1] + plus[-1]  # num의 일의 자리수와 plus의 일의 자리수 더함
    cnt += 1  # 사이클 수 증가
    if num == n:  # 만약 새로운 num과 처음 입력한 수 n이 같다면 사이클 수 출력하고 break
        print(cnt)
        break
